services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    volumes:
      - postgresDB:/var/lib/postgresql/data
    ports:
      - '5436:5432'
    env_file:
      - ./backend/.env

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redisDB:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    command: ["uvicorn", "cmd.main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./backend:/app/backend
    environment:
      - PYTHONPATH=/app
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery
    command: ["celery", "-A", "config.celery_app.celery", "worker", "--loglevel=info"]
    volumes:
      - ./:/app
    working_dir: /app/backend
    environment:
      - PYTHONPATH=/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - postgres

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery_beat
    command: ["celery", "-A", "config.celery_app.celery", "beat", "--loglevel=info"]
    volumes:
      - ./:/app
    working_dir: /app/backend
    environment:
      - PYTHONPATH=/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - postgres

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    command: [ "npm", "run", "dev", "--", "--host", "0.0.0.0"]
    working_dir: /app/client
    volumes:
      - ./client:/app/client
      - /app/client/node_modules
    ports:
      - "5173:5173"   
    environment:
      - VITE_BACKEND_URL=http://backend:8000
    depends_on:
      - backend

volumes:
  postgresDB:
  redisDB:
